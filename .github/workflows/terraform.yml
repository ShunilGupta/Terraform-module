name: 'Infra Setup'

on:
  workflow_dispatch:

   
env:
  ARM_CLIENT_ID: ${{ secrets.AZURE_AD_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.AZURE_AD_CLIENT_SECRET }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ secrets.AZURE_AD_TENANT_ID }}
    

jobs:
  terraform:
    name: 'Terraform_Setup'
    runs-on: ubuntu-latest
    environment: DEV
    
    defaults:
      run:
        shell: bash
        working-directory: ./Iac
 
    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3

    - name: login to az
      run: |
        az login --service-principal -u $ARM_CLIENT_ID -p $ARM_CLIENT_SECRET --tenant "$ARM_TENANT_ID"
        az account set --subscription $ARM_SUBSCRIPTION_ID 

    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.1.9
        terraform_wrapper: false
      
    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      id: init
      run: |
        terraform init -upgrade
      working-directory: ./Iac
      shell: bash

    # Validate the syntax of Terraform working directory
    - name: Terraform Validate
      id: validate
      run: terraform validate -no-color
      working-directory: ./Iac
      shell: bash

    # Generates an execution plan for Terraform
    - name: Terraform Plan
      id: plan
      run: |
        terraform plan -input=false -no-color -out tf.plan -var="spn_client_id=${{ secrets.AZURE_AD_CLIENT_ID }}" -var="subscription_id=${{ secrets.AZURE_SUBSCRIPTION_ID }}" -var="client_secret=${{ secrets.AZURE_AD_CLIENT_SECRET }}" -var="tenant_id=${{ secrets.AZURE_AD_TENANT_ID }}"
      working-directory: ./Iac
      shell: bash

  # Apply the generated plan for Terraform
    - name: Terraform Apply
      id: apply
      run: |
        terraform apply -auto-approve tf.plan
      working-directory: ./Iac
      shell: bash
